# https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions

# https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#name
name: 'Build and Publish Docker Images'

# https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#env
env:
  # Push main branch only, else just build
  DOCKER_PUSH: ${{ github.ref == 'refs/heads/main' }}
  
  # https://meta.nxvms.com/downloads/patches
  # Wait for R6 fix: https://support.networkoptix.com/hc/en-us/community/posts/4521083650583-NxMeta-5-0-0-34326-R6-fails-to-install-on-Ubuntu
  NXMETA_LATEST_VERSION: '5.0.0.34326'
  NXMETA_LATEST_URL: 'https://updates.networkoptix.com/metavms/5.0.0.34326%20R6/linux/metavms-server-5.0.0.34326-linux_x64-patch.deb'
  NXMETA_STABLE_VERSION: '4.2.0.33313'
  NXMETA_STABLE_URL: 'https://updates.networkoptix.com/metavms/4.2.0.33313%20P2/linux/metavms-server-4.2.0.33313-linux64-patch.deb'
  
  # https://beta.networkoptix.com/beta-builds/default/
  NXWITNESS_LATEST_VERSION: '4.2.0.34125'
  NXWITNESS_LATEST_URL: 'https://updates.networkoptix.com/default/4.2.0.34125/linux/nxwitness-server-4.2.0.34125-linux64-patch.deb'
  NXWITNESS_STABLE_VERSION: '4.2.0.34125'
  NXWITNESS_STABLE_URL: 'https://updates.networkoptix.com/default/4.2.0.34125/linux/nxwitness-server-4.2.0.34125-linux64-patch.deb'

  # https://dwspectrum.digital-watchdog.com/download/linux
  DWSPECTRUM_LATEST_VERSION: '4.2.0.32842'
  DWSPECTRUM_LATEST_URL: 'https://updates.networkoptix.com/digitalwatchdog/32842/linux/dwspectrum-server-4.2.0.32842-linux64.deb'
  DWSPECTRUM_STABLE_VERSION: '4.2.0.32842'
  DWSPECTRUM_STABLE_URL: 'https://updates.networkoptix.com/digitalwatchdog/32842/linux/dwspectrum-server-4.2.0.32842-linux64.deb'

# https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#on
on:
  push:
    branches: [main, develop]
    paths-ignore: [README.md]
  pull_request:
    branches: [main]
  schedule:
    # https://crontab.guru/
    # Rebuild 2am every Monday, LSIO rebuilds on Friday's
    # TODO: Figure out how to build main and develop vs. just the default branch
    - cron: '0 2 * * MON'

# https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#jobs
jobs:
  build:
    name: 'Build and Publish Docker Images'
    runs-on: ubuntu-latest

    # https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#jobsjob_idsteps
    # https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#jobsjob_idstepsuses
    # https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#jobsjob_idstepsrun
    steps:

      # https://github.com/actions/checkout
      - name: 'Checkout Code'
        uses: actions/checkout@v2

      # https://github.com/docker/setup-qemu-action
      - name: 'Setup QEMU'
        uses: docker/setup-qemu-action@v1

      # https://github.com/docker/setup-buildx-action
      - name: 'Setup Docker Buildx'
        uses: docker/setup-buildx-action@v1

      # https://github.com/marketplace/actions/docker-login
      - name: 'Login to Docker Hub'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # https://github.com/marketplace/actions/build-and-push-docker-images

      # Develop build of latest NxMeta-LSIO
      - name: 'Build and Push Develop Latest NxMeta-LSIO'
        uses: docker/build-push-action@v2
        # Enable for develop branch only
        if: ${{ endsWith(github.ref, 'refs/heads/develop') }}
        with:
          context: ./NxMeta-LSIO
          file: ./NxMeta-LSIO/Dockerfile
          platforms: linux/amd64
          # Do not push pull requests
          push: ${{ (github.event_name != 'pull_request') }}
          tags: |
            ptr727/nxmeta-lsio:develop
            ptr727/nxmeta-lsio:develop-latest
            ptr727/nxmeta-lsio:develop-${{ env.NXMETA_LATEST_VERSION }}
          build-args: |
            DOWNLOAD_VERSION=${{ env.NXMETA_LATEST_VERSION }}
            DOWNLOAD_URL=${{ env.NXMETA_LATEST_URL }}
      - name: 'Build and Push Develop Stable NxMeta-LSIO'
        uses: docker/build-push-action@v2
        # Enable for develop branch only
        if: ${{ endsWith(github.ref, 'refs/heads/develop') }}
        with:
          context: ./NxMeta-LSIO
          file: ./NxMeta-LSIO/Dockerfile
          platforms: linux/amd64
          # Do not push pull requests
          push: ${{ (github.event_name != 'pull_request') }}
          tags: |
            ptr727/nxmeta-lsio:develop-stable
            ptr727/nxmeta-lsio:develop-${{ env.NXMETA_STABLE_VERSION }}
          build-args: |
            DOWNLOAD_VERSION=${{ env.NXMETA_STABLE_VERSION }}
            DOWNLOAD_URL=${{ env.NXMETA_STABLE_URL }}

      # NxMeta-LSIO
      - name: 'Build and Push Latest NxMeta-LSIO'
        uses: docker/build-push-action@v2
        with:
          context: ./NxMeta-LSIO
          file: ./NxMeta-LSIO/Dockerfile
          platforms: linux/amd64
          push: ${{ env.DOCKER_PUSH }}
          tags: |
            ptr727/nxmeta-lsio:latest
            ptr727/nxmeta-lsio:${{ env.NXMETA_LATEST_VERSION }}
          build-args: |
            DOWNLOAD_VERSION=${{ env.NXMETA_LATEST_VERSION }}
            DOWNLOAD_URL=${{ env.NXMETA_LATEST_URL }}
      - name: 'Build and Push Stable NxMeta-LSIO'
        uses: docker/build-push-action@v2
        with:
          context: ./NxMeta-LSIO
          file: ./NxMeta-LSIO/Dockerfile
          platforms: linux/amd64
          push: ${{ env.DOCKER_PUSH }}
          tags: |
            ptr727/nxmeta-lsio:stable
            ptr727/nxmeta-lsio:${{ env.NXMETA_STABLE_VERSION }}
          build-args: |
            DOWNLOAD_VERSION=${{ env.NXMETA_STABLE_VERSION }}
            DOWNLOAD_URL=${{ env.NXMETA_STABLE_URL }}

      # NxMeta
      - name: 'Build and Push Latest NxMeta'
        uses: docker/build-push-action@v2
        with:
          context: ./NxMeta
          file: ./NxMeta/Dockerfile
          platforms: linux/amd64
          push: ${{ env.DOCKER_PUSH }}
          tags: |
            ptr727/nxmeta:latest
            ptr727/nxmeta:${{ env.NXMETA_LATEST_VERSION }}
          build-args: |
            DOWNLOAD_VERSION=${{ env.NXMETA_LATEST_VERSION }}
            DOWNLOAD_URL=${{ env.NXMETA_LATEST_URL }}
      - name: 'Build and Push Stable NxMeta'
        uses: docker/build-push-action@v2
        with:
          context: ./NxMeta
          file: ./NxMeta/Dockerfile
          platforms: linux/amd64
          push: ${{ env.DOCKER_PUSH }}
          tags: |
            ptr727/nxmeta:stable
            ptr727/nxmeta:${{ env.NXMETA_STABLE_VERSION }}
          build-args: |
            DOWNLOAD_VERSION=${{ env.NXMETA_STABLE_VERSION }}
            DOWNLOAD_URL=${{ env.NXMETA_STABLE_URL }}

      # NxWitness-LSIO
      - name: 'Build and Push Latest NxWitness-LSIO'
        uses: docker/build-push-action@v2
        with:
          context: ./NxWitness-LSIO
          file: ./NxWitness-LSIO/Dockerfile
          platforms: linux/amd64
          push: ${{ env.DOCKER_PUSH }}
          tags: |
            ptr727/nxwitness-lsio:latest
            ptr727/nxwitness-lsio:${{ env.NXWITNESS_LATEST_VERSION }}
          build-args: |
            DOWNLOAD_VERSION=${{ env.NXWITNESS_LATEST_VERSION }}
            DOWNLOAD_URL=${{ env.NXWITNESS_LATEST_URL }}
      - name: 'Build and Push Stable NxWitness-LSIO'
        uses: docker/build-push-action@v2
        with:
          context: ./NxWitness-LSIO
          file: ./NxWitness-LSIO/Dockerfile
          platforms: linux/amd64
          push: ${{ env.DOCKER_PUSH }}
          tags: |
            ptr727/nxwitness-lsio:stable
            ptr727/nxwitness-lsio:${{ env.NXWITNESS_STABLE_VERSION }}
          build-args: |
            DOWNLOAD_VERSION=${{ env.NXWITNESS_STABLE_VERSION }}
            DOWNLOAD_URL=${{ env.NXWITNESS_STABLE_URL }}

      # NxWitness
      - name: 'Build and Push Latest NxWitness'
        uses: docker/build-push-action@v2
        with:
          context: ./NxWitness
          file: ./NxWitness/Dockerfile
          platforms: linux/amd64
          push: ${{ env.DOCKER_PUSH }}
          tags: |
            ptr727/nxwitness:latest
            ptr727/nxwitness:${{ env.NXWITNESS_LATEST_VERSION }}
          build-args: |
            DOWNLOAD_VERSION=${{ env.NXWITNESS_LATEST_VERSION }}
            DOWNLOAD_URL=${{ env.NXWITNESS_LATEST_URL }}
      - name: 'Build and Push Stable NxWitness'
        uses: docker/build-push-action@v2
        with:
          context: ./NxWitness
          file: ./NxWitness/Dockerfile
          platforms: linux/amd64
          push: ${{ env.DOCKER_PUSH }}
          tags: |
            ptr727/nxwitness:stable
            ptr727/nxwitness:${{ env.NXWITNESS_STABLE_VERSION }}
          build-args: |
            DOWNLOAD_VERSION=${{ env.NXWITNESS_STABLE_VERSION }}
            DOWNLOAD_URL=${{ env.NXWITNESS_STABLE_URL }}

      # DWSpectrum-LSIO
      - name: 'Build and Push Latest DWSpectrum-LSIO'
        uses: docker/build-push-action@v2
        with:
          context: ./DWSpectrum-LSIO
          file: ./DWSpectrum-LSIO/Dockerfile
          platforms: linux/amd64
          push: ${{ env.DOCKER_PUSH }}
          tags: |
            ptr727/dwspectrum-lsio:latest
            ptr727/dwspectrum-lsio:${{ env.DWSPECTRUM_LATEST_VERSION }}
          build-args: |
            DOWNLOAD_VERSION=${{ env.DWSPECTRUM_LATEST_VERSION }}
            DOWNLOAD_URL=${{ env.DWSPECTRUM_LATEST_URL }}
      - name: 'Build and Push Stable DWSpectrum-LSIO'
        uses: docker/build-push-action@v2
        with:
          context: ./DWSpectrum-LSIO
          file: ./DWSpectrum-LSIO/Dockerfile
          platforms: linux/amd64
          push: ${{ env.DOCKER_PUSH }}
          tags: |
            ptr727/dwspectrum-lsio:stable
            ptr727/dwspectrum-lsio:${{ env.DWSPECTRUM_STABLE_VERSION }}
          build-args: |
            DOWNLOAD_VERSION=${{ env.DWSPECTRUM_STABLE_VERSION }}
            DOWNLOAD_URL=${{ env.DWSPECTRUM_STABLE_URL }}

      # DWSpectrum
      - name: 'Build and Push Latest DWSpectrum'
        uses: docker/build-push-action@v2
        with:
          context: ./DWSpectrum
          file: ./DWSpectrum/Dockerfile
          platforms: linux/amd64
          push: ${{ env.DOCKER_PUSH }}
          tags: |
            ptr727/dwspectrum:latest
            ptr727/dwspectrum:${{ env.DWSPECTRUM_LATEST_VERSION }}
          build-args: |
            DOWNLOAD_VERSION=${{ env.DWSPECTRUM_LATEST_VERSION }}
            DOWNLOAD_URL=${{ env.DWSPECTRUM_LATEST_URL }}
      - name: 'Build and Push Stable DWSpectrum'
        uses: docker/build-push-action@v2
        with:
          context: ./DWSpectrum
          file: ./DWSpectrum/Dockerfile
          platforms: linux/amd64
          push: ${{ env.DOCKER_PUSH }}
          tags: |
            ptr727/dwspectrum:stable
            ptr727/dwspectrum:${{ env.DWSPECTRUM_STABLE_VERSION }}
          build-args: |
            DOWNLOAD_VERSION=${{ env.DWSPECTRUM_STABLE_VERSION }}
            DOWNLOAD_URL=${{ env.DWSPECTRUM_STABLE_URL }}
